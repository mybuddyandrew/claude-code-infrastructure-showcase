{
    "version": "1.0",
    "description": "Skill activation triggers for Claude Code with Ruby on Rails applications. Controls when skills automatically suggest or block actions.",
    "skills": {
        "skill-developer": {
            "type": "domain",
            "enforcement": "suggest",
            "priority": "high",
            "description": "Meta-skill for creating and managing Claude Code skills",
            "promptTriggers": {
                "keywords": [
                    "skill system",
                    "create skill",
                    "add skill",
                    "skill triggers",
                    "skill rules",
                    "hook system",
                    "skill development",
                    "skill-rules.json"
                ],
                "intentPatterns": [
                    "(how do|how does|explain).*?skill",
                    "(create|add|modify|build).*?skill",
                    "skill.*?(work|trigger|activate|system)"
                ]
            }
        },
        "rails-backend-guidelines": {
            "type": "domain",
            "enforcement": "suggest",
            "priority": "high",
            "description": "Ruby on Rails backend development patterns for MVC, services, concerns, authentication, and authorization",
            "promptTriggers": {
                "keywords": [
                    "rails",
                    "ruby on rails",
                    "controller",
                    "model",
                    "active record",
                    "activerecord",
                    "service object",
                    "concern",
                    "route",
                    "routing",
                    "API",
                    "endpoint",
                    "migration",
                    "devise",
                    "pundit",
                    "authentication",
                    "authorization",
                    "policy",
                    "background job",
                    "sidekiq",
                    "rails backend"
                ],
                "intentPatterns": [
                    "(create|add|implement|build).*?(controller|model|route|migration|service)",
                    "(fix|handle|debug).*?(rails|activerecord|controller|model)",
                    "(add|implement).*?(authentication|authorization|devise|pundit)",
                    "(organize|structure|refactor).*?(rails|controller|model)",
                    "(how to|best practice).*?(rails|controller|model|activerecord)"
                ]
            },
            "fileTriggers": {
                "pathPatterns": [
                    "app/controllers/**/*.rb",
                    "app/models/**/*.rb",
                    "app/services/**/*.rb",
                    "app/policies/**/*.rb",
                    "app/jobs/**/*.rb",
                    "config/routes.rb",
                    "db/migrate/**/*.rb"
                ],
                "pathExclusions": [
                    "**/*_test.rb",
                    "**/*_spec.rb",
                    "test/**/*.rb",
                    "spec/**/*.rb"
                ],
                "contentPatterns": [
                    "class.*Controller < ApplicationController",
                    "class.*< ApplicationRecord",
                    "class.*< ActiveRecord",
                    "resources :",
                    "namespace :",
                    "belongs_to",
                    "has_many",
                    "has_one",
                    "devise",
                    "authorize"
                ]
            }
        },
        "rails-testing-guide": {
            "type": "domain",
            "enforcement": "suggest",
            "priority": "high",
            "description": "Rails testing patterns with Minitest, fixtures, and integration tests",
            "promptTriggers": {
                "keywords": [
                    "test",
                    "testing",
                    "minitest",
                    "fixtures",
                    "integration test",
                    "controller test",
                    "model test",
                    "rails test",
                    "assert",
                    "test helper"
                ],
                "intentPatterns": [
                    "(test|testing|write test).*?(controller|model|integration|rails)",
                    "(how to|best practice).*?test.*?rails",
                    "(create|add|write).*?(test|spec)"
                ]
            },
            "fileTriggers": {
                "pathPatterns": [
                    "test/**/*.rb",
                    "test/models/**/*_test.rb",
                    "test/controllers/**/*_test.rb",
                    "test/integration/**/*_test.rb",
                    "test/fixtures/**/*.yml"
                ],
                "contentPatterns": [
                    "class.*Test < ActiveSupport::TestCase",
                    "class.*Test < ActionDispatch::IntegrationTest",
                    "test \"",
                    "assert",
                    "fixtures"
                ]
            }
        },
        "rails-api-patterns": {
            "type": "domain",
            "enforcement": "suggest",
            "priority": "high",
            "description": "Rails API development patterns including serialization, versioning, and API-only controllers",
            "promptTriggers": {
                "keywords": [
                    "API",
                    "api controller",
                    "json",
                    "serializer",
                    "api versioning",
                    "rails api",
                    "rest api",
                    "api endpoint",
                    "jbuilder",
                    "active model serializers"
                ],
                "intentPatterns": [
                    "(create|add|implement|build).*?(API|endpoint|serializer)",
                    "(how to|best practice).*?(API|rails api|serialization)",
                    "(version|versioning).*?API"
                ]
            },
            "fileTriggers": {
                "pathPatterns": [
                    "app/controllers/api/**/*.rb",
                    "app/serializers/**/*.rb",
                    "app/views/**/*.jbuilder"
                ],
                "contentPatterns": [
                    "class.*< ActionController::API",
                    "namespace :api",
                    "ActiveModel::Serializer",
                    "render json:",
                    "jbuilder"
                ]
            }
        },
        "error-tracking": {
            "type": "domain",
            "enforcement": "suggest",
            "priority": "high",
            "description": "Error tracking and monitoring patterns for Rails applications",
            "promptTriggers": {
                "keywords": [
                    "error handling",
                    "exception",
                    "sentry",
                    "bugsnag",
                    "error tracking",
                    "monitoring",
                    "exception handling",
                    "rescue_from"
                ],
                "intentPatterns": [
                    "(add|create|implement|setup).*?(error handling|error tracking|monitoring)",
                    "(fix|handle|catch).*?(error|exception)",
                    "(how to|best practice).*?(error|exception|monitoring)"
                ]
            },
            "fileTriggers": {
                "pathPatterns": [
                    "config/initializers/sentry.rb",
                    "config/initializers/bugsnag.rb",
                    "app/controllers/application_controller.rb"
                ],
                "contentPatterns": [
                    "Sentry",
                    "Bugsnag",
                    "rescue_from",
                    "begin.*rescue"
                ]
            }
        }
    },
    "notes": {
        "enforcement_types": {
            "suggest": "Skill suggestion appears but doesn't block execution",
            "block": "Requires skill to be used before proceeding (guardrail)",
            "warn": "Shows warning but allows proceeding"
        },
        "priority_levels": {
            "critical": "Highest - Always trigger when matched",
            "high": "Important - Trigger for most matches",
            "medium": "Moderate - Trigger for clear matches",
            "low": "Optional - Trigger only for explicit matches"
        },
        "customization": {
            "pathPatterns": "Adjust to match your Rails project structure (app/controllers, app/models, etc.)",
            "keywords": "Add domain-specific terms relevant to your Rails application",
            "intentPatterns": "Use regex for flexible user intent matching"
        }
    }
}
